# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import greet_pb2 as greet__pb2


class GreetServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Greet = channel.unary_unary(
        '/greet.GreetService/Greet',
        request_serializer=greet__pb2.GreetRequest.SerializeToString,
        response_deserializer=greet__pb2.GreetResponse.FromString,
        )
    self.GreetManyTimes = channel.unary_stream(
        '/greet.GreetService/GreetManyTimes',
        request_serializer=greet__pb2.GreetManyTimesRequest.SerializeToString,
        response_deserializer=greet__pb2.GreetManytimesResponse.FromString,
        )
    self.LongGreet = channel.stream_unary(
        '/greet.GreetService/LongGreet',
        request_serializer=greet__pb2.LongGreetRequest.SerializeToString,
        response_deserializer=greet__pb2.LongGreetResponse.FromString,
        )
    self.GreetEveryone = channel.stream_stream(
        '/greet.GreetService/GreetEveryone',
        request_serializer=greet__pb2.GreetEveryoneRequest.SerializeToString,
        response_deserializer=greet__pb2.GreetEveryoneResponse.FromString,
        )
    self.GreetWithDeadline = channel.unary_unary(
        '/greet.GreetService/GreetWithDeadline',
        request_serializer=greet__pb2.GreetWithDeadlineRequest.SerializeToString,
        response_deserializer=greet__pb2.GreetWithDeadlineResponse.FromString,
        )


class GreetServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Greet(self, request, context):
    """Unary
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GreetManyTimes(self, request, context):
    """Server Streaming
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def LongGreet(self, request_iterator, context):
    """Client Streaming
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GreetEveryone(self, request_iterator, context):
    """BiDi Streaming
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GreetWithDeadline(self, request, context):
    """Unary With Deadline
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_GreetServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Greet': grpc.unary_unary_rpc_method_handler(
          servicer.Greet,
          request_deserializer=greet__pb2.GreetRequest.FromString,
          response_serializer=greet__pb2.GreetResponse.SerializeToString,
      ),
      'GreetManyTimes': grpc.unary_stream_rpc_method_handler(
          servicer.GreetManyTimes,
          request_deserializer=greet__pb2.GreetManyTimesRequest.FromString,
          response_serializer=greet__pb2.GreetManytimesResponse.SerializeToString,
      ),
      'LongGreet': grpc.stream_unary_rpc_method_handler(
          servicer.LongGreet,
          request_deserializer=greet__pb2.LongGreetRequest.FromString,
          response_serializer=greet__pb2.LongGreetResponse.SerializeToString,
      ),
      'GreetEveryone': grpc.stream_stream_rpc_method_handler(
          servicer.GreetEveryone,
          request_deserializer=greet__pb2.GreetEveryoneRequest.FromString,
          response_serializer=greet__pb2.GreetEveryoneResponse.SerializeToString,
      ),
      'GreetWithDeadline': grpc.unary_unary_rpc_method_handler(
          servicer.GreetWithDeadline,
          request_deserializer=greet__pb2.GreetWithDeadlineRequest.FromString,
          response_serializer=greet__pb2.GreetWithDeadlineResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'greet.GreetService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
